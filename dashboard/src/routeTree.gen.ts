/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as MarketingImport } from './routes/_marketing'
import { Route as AuthImport } from './routes/_auth'
import { Route as MarketingIndexImport } from './routes/_marketing/index'
import { Route as ProtectedDashboardIndexImport } from './routes/_protected/dashboard/index'
import { Route as AuthAuthSignInImport } from './routes/_auth/auth/sign-in'
import { Route as ProtectedDashboardActivityIndexImport } from './routes/_protected/dashboard/activity/index'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRoute = MarketingImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)

const ProtectedDashboardIndexRoute = ProtectedDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthAuthSignInRoute = AuthAuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedDashboardActivityIndexRoute =
  ProtectedDashboardActivityIndexImport.update({
    id: '/dashboard/activity/',
    path: '/dashboard/activity/',
    getParentRoute: () => ProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingImport
    }
    '/_auth/auth/sign-in': {
      id: '/_auth/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthAuthSignInImport
      parentRoute: typeof AuthImport
    }
    '/_protected/dashboard/': {
      id: '/_protected/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/dashboard/activity/': {
      id: '/_protected/dashboard/activity/'
      path: '/dashboard/activity'
      fullPath: '/dashboard/activity'
      preLoaderRoute: typeof ProtectedDashboardActivityIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthSignInRoute: typeof AuthAuthSignInRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthSignInRoute: AuthAuthSignInRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MarketingRouteChildren {
  MarketingIndexRoute: typeof MarketingIndexRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingIndexRoute: MarketingIndexRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedDashboardIndexRoute: typeof ProtectedDashboardIndexRoute
  ProtectedDashboardActivityIndexRoute: typeof ProtectedDashboardActivityIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardIndexRoute: ProtectedDashboardIndexRoute,
  ProtectedDashboardActivityIndexRoute: ProtectedDashboardActivityIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/auth/sign-in': typeof AuthAuthSignInRoute
  '/dashboard': typeof ProtectedDashboardIndexRoute
  '/dashboard/activity': typeof ProtectedDashboardActivityIndexRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/auth/sign-in': typeof AuthAuthSignInRoute
  '/dashboard': typeof ProtectedDashboardIndexRoute
  '/dashboard/activity': typeof ProtectedDashboardActivityIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_marketing': typeof MarketingRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_marketing/': typeof MarketingIndexRoute
  '/_auth/auth/sign-in': typeof AuthAuthSignInRoute
  '/_protected/dashboard/': typeof ProtectedDashboardIndexRoute
  '/_protected/dashboard/activity/': typeof ProtectedDashboardActivityIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/auth/sign-in' | '/dashboard' | '/dashboard/activity'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/auth/sign-in' | '/dashboard' | '/dashboard/activity'
  id:
    | '__root__'
    | '/_auth'
    | '/_marketing'
    | '/_protected'
    | '/_marketing/'
    | '/_auth/auth/sign-in'
    | '/_protected/dashboard/'
    | '/_protected/dashboard/activity/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MarketingRoute: typeof MarketingRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MarketingRoute: MarketingRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_marketing",
        "/_protected"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/sign-in"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing.tsx",
      "children": [
        "/_marketing/"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/dashboard/",
        "/_protected/dashboard/activity/"
      ]
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/_auth/auth/sign-in": {
      "filePath": "_auth/auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_protected/dashboard/": {
      "filePath": "_protected/dashboard/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/dashboard/activity/": {
      "filePath": "_protected/dashboard/activity/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
